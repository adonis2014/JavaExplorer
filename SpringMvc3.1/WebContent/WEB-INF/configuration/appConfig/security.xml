<?xml version="1.0" encoding="GB18030"?>
<b:beans xmlns="http://www.springframework.org/schema/security" xmlns:b="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         					 http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
         					 http://www.springframework.org/schema/util
    						 http://www.springframework.org/schema/util/spring-util.xsd
         					 http://www.springframework.org/schema/security
							 http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<b:bean class="name.chenyuelin.security.SecurityBeanPostProcessor"/>

	<!-- Remove the default filter -->
	<b:bean class="name.chenyuelin.security.SpringSecurityFilterChainPostProcessor">
		<b:property name="securityFilterChainName" value="#{T(name.chenyuelin.constants.BaseConstants).SECURITY_FILTER_CHAIN_NAME}"/>
		<b:property name="excludeFilterClasses">
			<util:list value-type="java.lang.Class">
				<b:value>org.springframework.security.web.authentication.logout.LogoutFilter</b:value>
			</util:list>
		</b:property>
	</b:bean>
	
	<!-- BeanFactoryPostProcessor set this bean to FilterInvocationSecurityMetadataSource-->
	<b:bean class="name.chenyuelin.security.TreeDataFilterInvocationSecurityMetadataSource" init-method="loadAuthorities">
		<b:property name="jdbcTemplate" ref="defaultJdbcTemplate"/>
		<b:property name="rolePrefix" value="ROLE_"/>
	</b:bean>
	
	<b:bean id="mySqlPasswordEncoder" class="name.chenyuelin.security.MySqlPasswordEncoder">
		<b:property name="jdbcTemplate" ref="defaultJdbcTemplate"/>
	</b:bean>
	
	<http name="httpSecurityFilterChain" authentication-manager-ref="authenticationManager" access-decision-manager-ref="accessDecisionManager">
		<intercept-url pattern="/**/*" access="ROLE_USER"/>
		<form-login />
		<http-basic />
		<logout />
	</http>

	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource" role-prefix="ROLE_"
			authorities-by-username-query="select 1,a.authority from ss_user u inner join ss_user_authority ua on u.id=ua.user_id inner join ss_authority a on ua.authority_id = a.id where u.id = ?" 
			users-by-username-query="select id,pd,enabled from ss_user where name = ?"/>
			<password-encoder ref="mySqlPasswordEncoder"/>
<!-- 				<salt-source system-wide="salt"/> -->
		</authentication-provider>
	</authentication-manager>
	
	<b:bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<b:constructor-arg>
			<b:list>
				<b:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
				<b:bean class="org.springframework.security.access.vote.RoleVoter"/>
			</b:list>
		</b:constructor-arg>
	</b:bean>
</b:beans>