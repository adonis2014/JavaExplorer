<?xml version="1.0" encoding="GB18030"?>
<beans  xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:aop="http://www.springframework.org/schema/aop"
	  	xmlns:context="http://www.springframework.org/schema/context" 
	  	xmlns:util="http://www.springframework.org/schema/util"
		xmlns:jee="http://www.springframework.org/schema/jee" 
		xmlns:ws="http://www.springframework.org/schema/web-services"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
					http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
					http://www.springframework.org/schema/aop
					http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
					http://www.springframework.org/schema/context
					http://www.springframework.org/schema/context/spring-context-3.2.xsd
					http://www.springframework.org/schema/util
    				http://www.springframework.org/schema/util/spring-util-3.2.xsd
					http://www.springframework.org/schema/jee
					http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
					http://www.springframework.org/schema/web-services 
					http://www.springframework.org/schema/web-services/web-services-2.0.xsd">
	
	<!-- 
	容器默认的HandlerAdapter是WebServiceMessageReceiverHandlerAdapter，它负责处理所有请求。
	它以org.springframework.ws.soap.server.SoapMessageDispatcher为核心
					
	默认的EndpointMapping有三个，依次为：
	org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping
	org.springframework.ws.soap.server.endpoint.mapping.SoapActionAnnotationMethodEndpointMapping
	org.springframework.ws.soap.addressing.server.AnnotationActionEndpointMapping
	
	默认的EndpointAdapter为org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapter
	 -->
	
	
	<!-- org.springframework.ws.config.WebServicesNamespaceHandler -->
	<context:component-scan base-package="name.chenyuelin.ws.endpoint,name.chenyuelin.ws.client" />
	
	<!-- org.springframework.ws.config.AnnotationDrivenBeanDefinitionParser -->
	<ws:annotation-driven marshaller="wsJaxb2Marshaller" unmarshaller="wsJaxb2Marshaller"/>
	
	<!-- 
	Spring WS 要申明一个operation操作必需要一组请求响应组合而来。
	如要申明findPerson的operation必需先定意findPersonRequest与findPersonResponse一对参数，operation会跟据此对参数自动生成 
	-->
	
	<!-- org.springframework.ws.config.DynamicWsdlBeanDefinitionParser -->
	<!-- ws:dynamic-wsdl空间名的targetNamespace属性为wsdl定义空间名，默认为xsd相同空间名。 -->
	<ws:dynamic-wsdl id="person" serviceName="PersonService" portTypeName="PersonPort" locationUri="/services/person/">
		<ws:xsd location="/WEB-INF/configuration/ws/schema_final.xsd"/>
	</ws:dynamic-wsdl>

	<bean id="crypto" class="org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean">
		<property name="keyStorePassword" value="kh6n*898" />
		<property name="keyStoreLocation" value="WEB-INF/keystore/master.keystore" />
	</bean>

	<ws:interceptors>
		<bean class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor" />

		<!-- UsernameTokenValidator的validate为默认UsernameToken认证策略 -->
		<bean class="org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor">
			<property name="validationActions" value="Encrypt" />
			
			<!-- 
			Soap Header for UsernameToken
			<wsse:UsernameToken wsu:Id="UsernameToken-2357389552A7C0791614021044770621">
				<wsse:Username>abc</wsse:Username>
				<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest">SXisPQAh7Kqm2jtXi8yUxF4mzhs=</wsse:Password>
				<wsse:Nonce EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary">Rv8iCkiWUdC94/Lf4R674w==</wsse:Nonce>
				<wsu:Created>2014-06-07T01:27:57.046Z</wsu:Created>
			</wsse:UsernameToken>
			 -->
			<property name="validationCallbackHandlers">
				<array>
				<!-- 
					<bean class="org.springframework.ws.soap.security.wss4j.callback.SimplePasswordValidationCallbackHandler">
						<property name="usersMap">
							<map>
								<entry key="abc" value="abc" />
							</map>
						</property>
					</bean>
					 -->
					<!-- <bean class="org.springframework.ws.soap.security.wss4j.callback.SpringSecurityPasswordValidationCallbackHandler">
						<property name="userDetailsService" ref="defaultUserDetailsService"/>
					</bean> -->
					
					<bean class="org.springframework.ws.soap.security.wss4j.callback.KeyStoreCallbackHandler">
						<property name="privateKeyPassword" value="private_pwd"/>
					</bean>
				</array>
			</property>

			<!-- 
			<wsu:Timestamp wsu:Id="TS-2357389552A7C0791614021044770622">
				<wsu:Created>2014-06-07T01:27:57.062Z</wsu:Created>
				<wsu:Expires>2014-06-07T01:32:57.062Z</wsu:Expires>
			</wsu:Timestamp>
			-->
			<property name="timestampStrict" value="true"/><!-- 是否检查客户端的wsu:Expires -->
    		<property name="validationTimeToLive" value="300"/><!-- 服务端根据客户端wsu:Created检查超时时间 -->
    		<property name="futureTimeToLive" value="60"/><!-- 客户端wsu:Created不能超前服务端60秒时间 -->
    		
			<!-- 
			<SOAP-ENV:Header>
				<wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
					SOAP-ENV:mustUnderstand="1">
					<ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#" Id="SIG-FFD312A85AA8B117CF14030722486405">
						<ds:SignedInfo>
							<ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#">
								<ec:InclusiveNamespaces xmlns:ec="http://www.w3.org/2001/10/xml-exc-c14n#" PrefixList="SOAP-ENV" />
							</ds:CanonicalizationMethod>
							<ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#dsa-sha1" />
							<ds:Reference URI="#id-FFD312A85AA8B117CF14030722486404">
								<ds:Transforms>
									<ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#">
										<ec:InclusiveNamespaces xmlns:ec="http://www.w3.org/2001/10/xml-exc-c14n#" PrefixList="" />
									</ds:Transform>
								</ds:Transforms>
								<ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1" />
								<ds:DigestValue>GfwuOROaDQUpiGDdTukxEpnrFgg=</ds:DigestValue>
							</ds:Reference>
						</ds:SignedInfo>
						<ds:SignatureValue>a2ZnJQPiH+NcOwMbF0CDxzpHk+Zw4wBKbAX7pKxBkY/mDa3JQSyTxw==</ds:SignatureValue>
						<ds:KeyInfo Id="KI-FFD312A85AA8B117CF14030722486252">
							<wsse:SecurityTokenReference wsu:Id="STR-FFD312A85AA8B117CF14030722486253">
								<ds:X509Data>
									<ds:X509IssuerSerial>
										<ds:X509IssuerName>CN=WS1,OU=Technology Section,O=BJDV,L=WX,ST=JS,C=CN</ds:X509IssuerName>
										<ds:X509SerialNumber>1403071090</ds:X509SerialNumber>
									</ds:X509IssuerSerial>
								</ds:X509Data>
							</wsse:SecurityTokenReference>
						</ds:KeyInfo>
					</ds:Signature>
				</wsse:Security>
			</SOAP-ENV:Header>
			-->
		
<!-- 			<property name="validationSignatureCrypto" ref="crypto" /> -->
		
			<property name="validationDecryptionCrypto" ref="crypto" />
		</bean>
	</ws:interceptors>

	<!-- Default EndpointExceptionResolver in org.springframework.ws.server.MessageDispatcher is SoapFaultAnnotationExceptionResolver, SimpleSoapExceptionResolver -->
	<!-- AnnotationDrivenBeanDefinitionParser的registerEndpointExceptionResolvers方法注册了两个默认的EndpointExceptionResolver -->
	<bean class="org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolver">
		<property name="order" value="1"/>
		<property name="exceptionMappings">
			<util:properties>
				<prop key="java.lang.RuntimeException">CLIENT,Invalid request</prop>
			</util:properties>
		</property>
	</bean>
	
	<!-- org.springframework.ws.soap.SoapVersion -->
	
	<!-- Default message factory, MessageDispatcherServlet will reference it -->
	<!-- <bean id="messageFactory" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory"/> -->
	
	<bean id="messageFactory12" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory">
		<property name="soapVersion">
			<util:constant static-field="org.springframework.ws.soap.SoapVersion.SOAP_12"/>
		</property>
	</bean>

	<bean id="wsJaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="packagesToScan">
			<list>
				<value>name.chenyuelin.ws.dto.person</value>
				<value>name.chenyuelin.ws.dto.airline</value>
			</list>
		</property>
		<property name="marshallerProperties">
			<map>
				<entry key="#{T(javax.xml.bind.Marshaller).JAXB_ENCODING}" value="utf-8" />
			</map>
		</property>
	</bean>
	
	<!-- **************************** Client ************************************ -->
	<bean id="webServiceTemplate11" class="org.springframework.ws.client.core.WebServiceTemplate">
		<constructor-arg ref="wsJaxb2Marshaller"/>
	</bean>
	
	<bean id="webServiceTemplate12" class="org.springframework.ws.client.core.WebServiceTemplate">
		<constructor-arg ref="messageFactory12"/>
		<property name="marshaller" ref="wsJaxb2Marshaller"/>
		<property name="unmarshaller" ref="wsJaxb2Marshaller"/>
	</bean>
</beans>