<?xml version="1.0" encoding="GB18030"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="SpringMvc3.1" default="native" basedir=".">

	<description>Spring3.1 MVC sample.</description>

	<import file="../base.xml" />

	<property file="build.properties" />

	<target name="initialize" depends="baseBuild.initialize">
		<echo message="${ivy.cache.dir}" />
		<echo message="${ivy.default.ivy.user.dir}" />
		<echo message="${ivy.jar.dir}" />
		<echo message="${ivy.shared.default.root}" />
	</target>

	<target name="native">
		<property name="nativeDirectory" value="WebContent/WEB-INF/i18n" />
		<delete>
			<fileset dir="${nativeDirectory}" includes="**/*.properties" />
		</delete>
		<native2ascii dest="${nativeDirectory}" src="${nativeDirectory}" includes="**/*.txt" ext=".properties" encoding="gbk" />
	</target>

	<target name="compile" depends="baseBuild.compile,native">
		<!--<antcall target="native" />-->
		<echo message="Compile complete!"/>
	</target>

	<target name="compile-test" depends="compile,baseBuild.compile-test">
		<javac srcdir="src" destdir="${project-test-directory}" classpathref="expand-test-classpath" includeantruntime="false" includes="integrationTest/**"/>
		<copy todir="${project-test-directory}" includeEmptyDirs="false">
			<fileset dir="src" excludes="**/*.java,META-INF/**/*" includes="integrationTest/**" />
		</copy>
	</target>

	<target name="test" depends="compile-test,baseBuild.test">
		<junit printsummary="true" haltonfailure="true" showoutput="false" fork="true" dir="${basedir}">
			<jvmarg value="-javaagent:${artifact.path.spring-instrument}" />
			<formatter type="brief" usefile="false" />
			<formatter type="xml" if="test.reportable" />
			<classpath>
				<path refid="expand-test-classpath" />
				<pathelement location="${project-test-directory}" />
			</classpath>
			<!--batchtest todir="${project-integration-test-reports-directory}">
				<fileset dir="${project-test-directory}" includes="integrationTest/**/*Test.class" />
			</batchtest-->
			<test todir="${project-integration-test-reports-directory}" name="integrationTest.AllTests" />
		</junit>
	</target>

	<target name="generate-test-report" depends="test,baseBuild.generate-test-report" if="test.reportable">
		<junitreport todir="${project-integration-test-reports-directory}">
			<fileset dir="${project-integration-test-reports-directory}" includes="TEST-*.xml" />
			<report format="frames" todir="${project-integration-test-reports-directory}" />
		</junitreport>
		<delete includeemptydirs="true">
			<fileset dir="${project-integration-test-reports-directory}" includes="*.xml" />
		</delete>
	</target>

	<target name="package" depends="generate-test-report">
		<!--pathconvert pathsep="," property="war.libs" refid="compile-classpath">
		</pathconvert>
		<fileset dir="${ivy.cache.dir}" id="classpath.extra.lib.id">
			<include name="${war.libs}"/>
		</fileset> 
		<echo message="${war.libs}"/>
		<echo message="${toString:compile-classpath}"/>
		<echo message="${classpath.extra.lib.id}"/-->

		<ivy:findrevision organisation="${ivy.organisation}" module="DataPersistence" revision="latest.integration" property="ivy.data.persistence.version" />

		<war destfile="${work-dist-directory}/${DSTAMP}${ant.project.name}.war" basedir="WebContent" excludes="WEB-INF/i18n/**/*.txt">
			<classes dir="${project-class-directory}" />
			<lib file="${artifact.path.aopalliance}" />
			<lib file="${artifact.path.commons-logging}" />
			<lib file="${artifact.path.aspectjrt}" />
			<lib file="${artifact.path.aspectjweaver}" />

			<lib file="${artifact.path.jackson-annotations}" />
			<lib file="${artifact.path.jackson-core}" />
			<lib file="${artifact.path.jackson-databind}" />

			<lib file="${artifact.path.javax.persistence}" />
			<lib file="${artifact.path.org.eclipse.persistence.antlr}" />
			<lib file="${artifact.path.org.eclipse.persistence.asm}" />
			<lib file="${artifact.path.org.eclipse.persistence.core}" />
			<lib file="${artifact.path.org.eclipse.persistence.jpa}" />
			<lib file="${artifact.path.org.eclipse.persistence.jpa.jpql}" />

			<lib file="${artifact.path.spring-aop}" />
			<lib file="${artifact.path.spring-aspects}" />
			<lib file="${artifact.path.spring-beans}" />
			<lib file="${artifact.path.spring-context}" />
			<lib file="${artifact.path.spring-core}" />
			<lib file="${artifact.path.spring-expression}" />
			<lib file="${artifact.path.spring-jdbc}" />
			<lib file="${artifact.path.spring-jms}" />
			<lib file="${artifact.path.spring-orm}" />
			<lib file="${artifact.path.spring-oxm}" />
			<lib file="${artifact.path.spring-tx}" />
			<lib file="${artifact.path.spring-web}" />
			<lib file="${artifact.path.spring-webmvc}" />

			<lib file="${artifact.path.poi}" />
			<lib file="${artifact.path.poi-ooxml}" />
			<lib file="${artifact.path.poi-ooxml-schemas}" />
			<lib file="${artifact.path.poi-scratchpad}" />

			<lib file="${artifact.path.DataPersistence}" />

			<!-- ant 1.8+
			<mappedresources>
				<restrict>
					<path refid="expand-compile-classpath"/>
					<type type="file"/>
				</restrict>
				<chainedmapper>
					<flattenmapper/>
					<globmapper from="*" to="WEB-INF/lib/*"/>
				</chainedmapper>
			</mappedresources>
			-->
		</war>
	</target>

	<!--target name="zip-report">
		<zip destfile="zipReport${DSTAMP}.zip" basedir="${testReportDir}" update="true"/>
	</target>

	<target name="send-mail">
		<mail from="chenyuelin311@sohu.com" tolist="772441445@qq.com,40084863@qq.com" 
			mailhost="smtp.sohu.com" user="chenyuelin311" password="82617977" 
			subject="test" message="junit report." files="zipReport${DSTAMP}.zip"/>
	</target>

	<target name="cvs-checkout" unless="jerseySample_exists">
		<echo message="cvs-checkout"/>
		<cvs cvsroot=":pserver:developer:developer@192.168.1.254:/cvs_repository" command="checkout" dest="${basedir}" package="JerseySample" failonerror="true"/>
	</target>

	<target name="cvs-update" if="jerseySample_exists">
		<echo message="cvs-update"/>
		<cvs cvsroot=":pserver:developer:developer@192.168.1.254:/cvs_repository" command="update" dest="${basedir}" package="JerseySample" failonerror="true"/>
	</target>

	<target name="update-jerseySample" depends="cvs-checkout,cvs-update"/>

	<target name="queryTables">
		<sql driver="com.mysql.jdbc.Driver" password="w8xk73w12pz5" url="jdbc:mysql://localhost:3306/test" userid="root" print="true">
			show tables;
		</sql>
	</target-->

	<target name="schemagen" depends="resolve">
		<property name="schemaOutputPath" location="${basedir}/WebContent/WEB-INF/configuration/ws"/>
		<exec executable="${env.JAVA_HOME}/bin/schemagen.exe" osfamily="windows">
			<arg value="-d"/>
			<arg value="${schemaOutputPath}"/>
			<arg value="-cp"/>
			<arg value="build/classes;${toString:compile-classpath}"/>
			<arg value="name.chenyuelin.webapp.dto.PersonDto"/>
			<arg value="name.chenyuelin.ws.dto.PersonCommand"/>
		</exec>
	</target>

	<target name="xjc">
		<property name="xjcOutputPath" location="${basedir}/src" />
		<property name="xsdFilePath" location="${xjcOutputPath}/name/chenyuelin/ws/dto/airline/Reponse.xsd" />
		<exec executable="${env.JAVA_HOME}/bin/xjc.exe" osfamily="windows">
			<arg value="-d" />
			<arg value="${xjcOutputPath}" />
			<arg value="-p" />
			<arg value="name.chenyuelin.ws.dto.airline" />
			<arg value="${xsdFilePath}" />
		</exec>
	</target>

	<target name="wsimport">
		<property name="wsOutputPath" location="${basedir}/src"/>
		<property name="wsdlFilePath" value="http://webservice.webxml.com.cn/webservices/DomesticAirline.asmx?wsdl"/>
		<exec executable="${env.JAVA_HOME}/bin/wsimport.exe" osfamily="windows">
			<arg value="-s"/>
			<arg value="${wsOutputPath}"/>
			<arg value="-p"/>
			<arg value="name.chenyuelin.ws.client.airline"/>
			<arg value="-extension"/>
			<arg value="${wsdlFilePath}"/>
		</exec>
	</target>

	<!-- Mybatis Generate -->
	<target name="mybatis-generate" depends="resolve">
		<java jar="${artifact.path.mybatis-generator-core}" fork="true" classpath="${artifact.path.mysql-connector-java}" >
			<sysproperty key="jdbcPath" value="${artifact.path.mysql-connector-java}"/>
			<arg value="-configfile"/>
			<arg value="mybatis-generator.xml"/>
			<arg value="-overwrite"/>
		</java>
	</target>

	<!-- 
		CN(Common Name名字与姓氏) 
	　　OU(Organization Unit组织单位名称) 
	　　O(Organization组织名称) 
	　　L(Locality城市或区域名称) 
	　　ST(State州或省份名称) 
	　　C(Country国家名称） 
	-->
	<target name="keytool-genkeypair">
		<property name="keytool.keystore.alias" value="ws1"/>
		<property name="keytool.keystore.keypass" value="12345678"/>
		<exec executable="${env.JAVA_HOME}/bin/keytool.exe">
			<arg value="-genkeypair"/>
			<arg value="-alias"/>
			<arg value="${keytool.keystore.alias}"/>
			<arg value="-keystore"/>
			<arg value="${keytool.keystore.master.file}"/>
			<arg value="-storepass"/>
			<arg value="${keytool.storepass}"/>
			<arg value="-keypass"/>
			<arg value="${keytool.keystore.keypass}"/>
			<arg value="-dname"/>
			<arg value="CN=WS1,OU=Technology Section,O=BJDV,L=WX,ST=JS,C=CN"/>
			<arg value="-validity"/>
			<!-- default 90 -->
			<arg value="365"/>
			<!--
			<arg value="-storetype"/><arg value="JKS"/>
			常用的有JKS(默认),JCEKS(推荐),PKCS12,BKS,UBER。每个密钥库只可以是其中一种类型。
			-->
		</exec>
	</target>

	<target name="keytool-list">
		<exec executable="${env.JAVA_HOME}/bin/keytool.exe">
			<arg line="-list -v -keystore ${keytool.keystore.master.file} -storepass ${keytool.storepass}"/>
		</exec>
	</target>

	<target name="keytool-export">
		<property name="keytool.keystore.alias" value="ws1" />
		<property name="keytool.keystore.cer.file" value="${basedir}/${keytool.keystore.alias}.cer" />
		<exec executable="${env.JAVA_HOME}/bin/keytool.exe">
			<arg value="-export" />
			<arg value="-alias" />
			<arg value="${keytool.keystore.alias}" />
			<arg value="-keystore" />
			<arg value="${keytool.keystore.master.file}" />
			<arg value="-storepass"/>
			<arg value="${keytool.storepass}"/>
			<arg value="-file" />
			<arg value="${keytool.keystore.cer.file}" />
		</exec>
	</target>

	<target name="keytool-printcert">
		<property name="keytool.keystore.alias" value="ws1" />
		<property name="keytool.keystore.cer.file" value="${basedir}/${keytool.keystore.alias}.cer" />
		<exec executable="${env.JAVA_HOME}/bin/keytool.exe">
			<arg value="-printcert" />
			<arg value="-v" />
			<arg value="-file" />
			<arg value="${keytool.keystore.cer.file}" />
		</exec>
	</target>
</project>